'use client';

import { useState } from 'react';
import { useSession } from 'next-auth/react';
import { addVehicle } from '../components/neo4jQueries';
import { Input, Button, Alert } from '@nextui-org/react';


const AddVehicle = () => {
  //const [email, setEmail] = useState('');
  const [make, setMake] = useState('');
  const [model, setModel] = useState('');
  const [license, setLicense] = useState('');
  const [currentMileage, setCurrentMileage] = useState(0);
  const [successMessage, setSuccessMessage] = useState(null);
  const [errorMessage, setErrorMessage] = useState(null);

  const { data: session } = useSession();
  //console.log(email);

  if (!session) {
    return <div>You must be logged in to add a vehicle.</div>;
  }

  const handleSubmit = async (event) => {
    event.preventDefault();
    try {
      await addVehicle(session.user.email, make, model, license, currentMileage);
      setSuccessMessage('Vehicle added successfully!');
      setMake('');
      setModel('');
      setLicense('');
      setCurrentMileage('');
    } catch (error) {
      setErrorMessage('Error adding vehicle: ' + error.message);
    }
  };

  return (
    <div className="max-w-md mx-auto p-4 bg-white rounded-lg shadow-md">
      <h2 className="text-lg font-bold mb-4 text-gray-800">Add Vehicle</h2>
      {successMessage && <Alert type="success">{successMessage}</Alert>}
      {errorMessage && <Alert type="error">{errorMessage}</Alert>}
      <form onSubmit={handleSubmit} className="flex flex-col space-y-4">
        <Input
          label="Make"
          id="make"
          value={make}
          onChange={(event) => setMake(event.target.value)}
        />
        <Input
          label="Model"
          id="model"
          value={model}
          onChange={(event) => setModel(event.target.value)}
        />
        <Input
          label="License"
          id="license"
          value={license}
          onChange={(event) => setLicense(event.target.value)}
        />
        <Input
          label="Current Mileage"
          id="currentMileage"
          type="number"
          value={currentMileage}
          onChange={(event) => setCurrentMileage(parseFloat(event.target.value))}
        />
        <Button type="submit" color="primary">
          Add Vehicle
        </Button>
      </form>
    </div>
  );
};

export default AddVehicle;